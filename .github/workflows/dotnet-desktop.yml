name: .NET Build, Test and Publish

on:
  push:
    branches: ["main"]
    tags: ["v*"] # only trigger the publish steps on tags
  pull_request:
    branches: ["main"]

env:
  SOLUTION_PATH: SimpleMapper/SimpleMapper.sln
  TEST_PROJECT_PATH: SimpleMapper/UnitTestXUnitNet6/UnitTestXUnitNet6.csproj
  PACKAGE_PROJECT_PATH: SimpleMapper/SimpleMapper/SimpleMapper.csproj
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output
  NUGET_SOURCE_URL: https://api.nuget.org/v3/index.json

jobs:
  build:
    name: Build Solution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: SimpleMapper/**/bin/Release/
          if-no-files-found: error

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: SimpleMapper/

      - name: Test with xUnit
        run: |
          dotnet test ${{ env.TEST_PROJECT_PATH }} \
            --configuration Release \
            --no-build \
            --logger "console;verbosity=detailed" \
            --logger "trx;LogFileName=test-results.trx" \
            --collect:"XPlat Code Coverage" \
            --results-directory ./test-results

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            ./test-results/*.trx
            ./test-results/**/coverage.cobertura.xml
          if-no-files-found: warn

  pack:
    name: Package NuGet
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Debug paths
        run: |
          echo "Solution path: ${{ env.SOLUTION_PATH }}"
          echo "Package project path: ${{ env.PACKAGE_PROJECT_PATH }}"
          echo "Package output directory: ${{ env.PACKAGE_OUTPUT_DIRECTORY }}"
          ls -la SimpleMapper/SimpleMapper/ || echo "Directory not found"

      - name: Create output directory
        run: mkdir -p ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: Pack
        run: |
          dotnet pack ${{ env.PACKAGE_PROJECT_PATH }} \
          --configuration Release \
          --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg
          if-no-files-found: error

  publish:
    name: Publish to NuGet
    needs: pack
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # only on tag pushes
    steps:
      - name: Download package artifacts
        uses: actions/download-artifact@v4
        with:
          name: nuget-package
          path: ${{ env.PACKAGE_OUTPUT_DIRECTORY }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Push to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push \
            "${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg" \
            --api-key $NUGET_API_KEY \
            --source ${{ env.NUGET_SOURCE_URL }} \
            --skip-duplicate
